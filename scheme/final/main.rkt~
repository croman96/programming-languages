#lang racket

(define t '(8(5(2)(7))(11(9)(61))))

(define (leaf? node)
  (null? (cdr node)))

(define (tree-sum node)
  (cond
    [(null? node) 0]
    [(leaf? node) (car node)]
    [else (+ (car node) (+ (tree-sum (car (cdr node))) (tree-sum (car (cdr (cdr node))))))]))
